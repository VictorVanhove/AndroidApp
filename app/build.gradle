apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version
    defaultConfig {
        applicationId "com.hogent.dikkeploaten"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        multiDexEnabled true
        versionCode app_version_code
        versionName app_version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures{
        dataBinding = true
    }
    androidExtensions {
        experimental = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // work-runtime-ktx 2.1.0 and above now requires Java 8
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$version_kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$version_kotlin"

    implementation "androidx.appcompat:appcompat:$version_appcompat"

    // Support libraries
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"

    // Android KTX
    implementation "androidx.core:core-ktx:$version_core_ktx"

    // Room and Lifecycle dependencies
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"

    // Database library
    implementation project(path: ":database")

    // Api library
    implementation project(path: ":network")
    implementation project(path: ":domain")

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutine"

    // Retrofit Coroutines Support
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

    // Navigation
    implementation "android.arch.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "android.arch.navigation:navigation-ui-ktx:$version_navigation"

    // Testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'

    implementation 'com.android.support:multidex:1.0.3'

    implementation "androidx.recyclerview:recyclerview:$version_recyclerview"
    implementation "androidx.cardview:cardview:$version_cardview"

    implementation "com.google.android.material:material:$version_material"
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    implementation 'androidx.vectordrawable:vectordrawable:1.0.1'

    // Glide
    implementation "com.github.bumptech.glide:glide:$version_glide"
    kapt "com.github.bumptech.glide:compiler:$version_glide"

    implementation "androidx.fragment:fragment-ktx:1.2.5"
}

apply plugin: 'org.jetbrains.dokka'

dokka {
    outputFormat = 'html' // use 'javadoc' to get standard java docs
    outputDirectory = "$buildDir/javadoc"

    configuration {
        includeNonPublic = false
        skipEmptyPackages = true
        skipDeprecated = true
        reportUndocumented = true
        jdkVersion = 8
    }
}